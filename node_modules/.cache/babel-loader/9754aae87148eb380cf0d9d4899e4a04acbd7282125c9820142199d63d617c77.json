{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"user-info-container\"\n};\nconst _hoisted_2 = {\n  class: \"user-avatar\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  key: 1,\n  class: \"default-avatar\"\n};\nconst _hoisted_5 = {\n  class: \"user-details\"\n};\nconst _hoisted_6 = {\n  class: \"status\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 用户头像 \"), _createElementVNode(\"div\", _hoisted_2, [$data.user.avatarUrl ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $data.user.avatarUrl,\n    alt: \"User Avatar\"\n  }, null, 8 /* PROPS */, _hoisted_3)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"用户头像\"))]), _createCommentVNode(\" 用户信息 \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h2\", null, _toDisplayString($data.user.username), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createTextVNode(\" 角色: \")), _createElementVNode(\"span\", null, _toDisplayString($data.user.rolename), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createTextVNode(\" 状态: \")), _createElementVNode(\"span\", _hoisted_6, _toDisplayString($data.user.status), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createTextVNode(\" 创建时间: \")), _createElementVNode(\"span\", null, _toDisplayString($options.formatDate($data.user.createdAt)), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createTextVNode(\" 上次登录: \")), _createElementVNode(\"span\", null, _toDisplayString($data.user.lastLogin ? $options.formatDate($data.user.lastLogin) : \"未登录\"), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createTextVNode(\" 已使用存储: \")), _createElementVNode(\"span\", null, _toDisplayString($data.user.storageUsed) + \" MB\", 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[5] || (_cache[5] = _createTextVNode(\" 邮箱: \")), _createElementVNode(\"span\", null, _toDisplayString($data.user.email || \"未设置\"), 1 /* TEXT */)])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","$data","user","avatarUrl","src","alt","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","username","_createTextVNode","rolename","_hoisted_6","status","$options","formatDate","createdAt","lastLogin","storageUsed","email"],"sources":["/Users/bzh/SUSTBZH/SoftEng/github/team-project-25spring-14_/src/views/home/SettingsView.vue"],"sourcesContent":["<template>\n  <div class=\"user-info-container\">\n    <!-- 用户头像 -->\n    <div class=\"user-avatar\">\n      <img v-if=\"user.avatarUrl\" :src=\"user.avatarUrl\" alt=\"User Avatar\" />\n      <div v-else class=\"default-avatar\">用户头像</div>\n    </div>\n\n    <!-- 用户信息 -->\n    <div class=\"user-details\">\n      <h2>{{ user.username }}</h2>\n      <p>\n        角色: <span>{{ user.rolename }}</span>\n      </p>\n      <p>\n        状态: <span class=\"status\">{{ user.status }}</span>\n      </p>\n      <p>\n        创建时间: <span>{{ formatDate(user.createdAt) }}</span>\n      </p>\n      <p>\n        上次登录:\n        <span>{{\n          user.lastLogin ? formatDate(user.lastLogin) : \"未登录\"\n        }}</span>\n      </p>\n      <p>\n        已使用存储: <span>{{ user.storageUsed }} MB</span>\n      </p>\n      <p>\n        邮箱: <span>{{ user.email || \"未设置\" }}</span>\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"UserInfo\",\n  data() {\n    return {\n      user: {\n        userId: 1,\n        rolename: \"user\",\n        username: \"123456\",\n        email: null,\n        avatarUrl: null,\n        status: \"active\",\n        storageUsed: 0,\n        createdAt: \"2025-03-18T13:28:35.297615\",\n        lastLogin: null,\n      },\n    };\n  },\n  methods: {\n    // 格式化日期\n    formatDate(date) {\n      const options = {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\",\n      };\n      return new Date(date).toLocaleDateString(\"zh-CN\", options);\n    },\n  },\n};\n</script>\n<style scoped>\n/* 用户信息容器 */\n.user-info-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: var(--background);\n  padding: 32px;\n  border-radius: var(--card-radius);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n/* 用户头像 */\n.user-avatar {\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  overflow: hidden;\n  background: var(--primary-color);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 24px;\n}\n\n.user-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.default-avatar {\n  color: white;\n  font-size: 16px;\n  text-align: center;\n  line-height: 120px;\n}\n\n/* 用户信息 */\n.user-details {\n  text-align: center;\n  color: var(--text-primary);\n}\n\n.user-details h2 {\n  margin: 0 0 16px;\n  font-size: 24px;\n  font-weight: 600;\n}\n\n.user-details p {\n  font-size: 16px;\n  margin: 8px 0;\n}\n\n.status {\n  color: green;\n}\n\n.user-details span {\n  color: var(--text-secondary);\n}\n\n/* 设置头像为圆形，未设置头像时为默认文本显示 */\n.user-avatar img,\n.default-avatar {\n  border-radius: 50%;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAqB;;EAEzBA,KAAK,EAAC;AAAa;mBAH5B;;EAAAC,GAAA;EAKkBD,KAAK,EAAC;;;EAIfA,KAAK,EAAC;AAAc;;EAMXA,KAAK,EAAC;AAAQ;;uBAd9BE,mBAAA,CAgCM,OAhCNC,UAgCM,GA/BJC,mBAAA,UAAa,EACbC,mBAAA,CAGM,OAHNC,UAGM,GAFOC,KAAA,CAAAC,IAAI,CAACC,SAAS,I,cAAzBP,mBAAA,CAAqE;IAJ3ED,GAAA;IAIkCS,GAAG,EAAEH,KAAA,CAAAC,IAAI,CAACC,SAAS;IAAEE,GAAG,EAAC;0BAJ3DC,UAAA,M,cAKMV,mBAAA,CAA6C,OAA7CW,UAA6C,EAAV,MAAI,G,GAGzCT,mBAAA,UAAa,EACbC,mBAAA,CAuBM,OAvBNS,UAuBM,GAtBJT,mBAAA,CAA4B,YAAAU,gBAAA,CAArBR,KAAA,CAAAC,IAAI,CAACQ,QAAQ,kBACpBX,mBAAA,CAEI,Y,0BAbVY,gBAAA,CAWS,OACG,IAAAZ,mBAAA,CAAgC,cAAAU,gBAAA,CAAvBR,KAAA,CAAAC,IAAI,CAACU,QAAQ,iB,GAE5Bb,mBAAA,CAEI,Y,0BAhBVY,gBAAA,CAcS,OACG,IAAAZ,mBAAA,CAA6C,QAA7Cc,UAA6C,EAAAJ,gBAAA,CAArBR,KAAA,CAAAC,IAAI,CAACY,MAAM,iB,GAEzCf,mBAAA,CAEI,Y,0BAnBVY,gBAAA,CAiBS,SACK,IAAAZ,mBAAA,CAA6C,cAAAU,gBAAA,CAApCM,QAAA,CAAAC,UAAU,CAACf,KAAA,CAAAC,IAAI,CAACe,SAAS,kB,GAE1ClB,mBAAA,CAKI,Y,0BAzBVY,gBAAA,CAoBS,SAED,IAAAZ,mBAAA,CAES,cAAAU,gBAAA,CADPR,KAAA,CAAAC,IAAI,CAACgB,SAAS,GAAGH,QAAA,CAAAC,UAAU,CAACf,KAAA,CAAAC,IAAI,CAACgB,SAAS,0B,GAG9CnB,mBAAA,CAEI,Y,0BA5BVY,gBAAA,CA0BS,UACM,IAAAZ,mBAAA,CAAsC,cAAAU,gBAAA,CAA7BR,KAAA,CAAAC,IAAI,CAACiB,WAAW,IAAG,KAAG,gB,GAExCpB,mBAAA,CAEI,Y,0BA/BVY,gBAAA,CA6BS,OACG,IAAAZ,mBAAA,CAAsC,cAAAU,gBAAA,CAA7BR,KAAA,CAAAC,IAAI,CAACkB,KAAK,0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}